/**
 * üîç Script de Verificaci√≥n Post-Soluci√≥n
 * Ejecutar en consola del navegador para verificar que todo funciona
 */

window.verifyMobileResetSolution = function() {
    console.log('üîç [VERIFICACION] Verificando soluci√≥n de reset m√≥vil...');
    
    const checks = {
        '‚úÖ Force Sync disponible': typeof forceSyncFromSupabase === 'function',
        '‚úÖ Diagn√≥sticos disponibles': typeof runSystemDiagnostics === 'function', 
        '‚úÖ Auto-detecci√≥n disponible': typeof autoDetectSyncNeeded === 'function',
        '‚úÖ Singleton Supabase': typeof SupabaseSingleton === 'object',
        '‚úÖ Init Manager v2': typeof InitManager === 'object',
        '‚úÖ Supabase conectado': window.SupabaseManager?.isConnected || false,
        '‚úÖ Variables configuradas': !!window.ENV_RAFFLE_CONFIG,
        '‚úÖ Estado aplicaci√≥n': !!window.AppState
    };
    
    console.log('üìä [VERIFICACION] Resultados:');
    let passedChecks = 0;
    const totalChecks = Object.keys(checks).length;
    
    Object.entries(checks).forEach(([check, result]) => {
        if (result) {
            console.log(`  ${check}: OK`);
            passedChecks++;
        } else {
            console.log(`  ‚ùå ${check}: FALLA`);
        }
    });
    
    const percentage = Math.round((passedChecks / totalChecks) * 100);
    console.log(`üìà [VERIFICACION] Estado: ${percentage}% (${passedChecks}/${totalChecks})`);
    
    if (percentage >= 90) {
        console.log('üéâ [VERIFICACION] ¬°Soluci√≥n aplicada correctamente!');
        
        // Verificar sincronizaci√≥n autom√°ticamente
        if (typeof autoDetectSyncNeeded === 'function') {
            console.log('üîÑ [VERIFICACION] Ejecutando auto-detecci√≥n de sincronizaci√≥n...');
            autoDetectSyncNeeded();
        }
        
        return true;
    } else {
        console.log('‚ö†Ô∏è [VERIFICACION] Algunos componentes faltan');
        console.log('üìã [ACCION] Revisar que todos los scripts est√©n cargados');
        return false;
    }
};

// Ejecutar verificaci√≥n autom√°tica despu√©s de 5 segundos
setTimeout(() => {
    if (typeof verifyMobileResetSolution === 'function') {
        verifyMobileResetSolution();
    }
}, 5000);

console.log('üîç [VERIFICACION] Script cargado - Ejecutar verifyMobileResetSolution()');
